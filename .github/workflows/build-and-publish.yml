---
name: Build and Publish
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build and push the generated code
    runs-on: ubuntu-latest
    # here we reuse an image that is maintained for the CS3APIs bindings, which contains the necessary tools (buf)
    # see https://github.com/cs3org/cs3apis-build/blob/master/Dockerfile
    container: cs3org/cs3apis-build:master
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: setup-ssh
        env:
          SSH_KEY: ${{ secrets.ssh_key }}
        run: |
          mkdir /root/.ssh
          python3 -c "import os; file = open('/root/.ssh/id_rsa', 'w'); file.write(os.environ['SSH_KEY']); file.close()"
          chmod 400 /root/.ssh/id_rsa
          touch /root/.ssh/known_hosts
          chmod 400 /root/.ssh/known_hosts
          ssh-keyscan -H github.com > /etc/ssh/ssh_known_hosts 2> /dev/null
      - name: build-and-push
        id: build
        run: |
          buf generate
          cd ..
          git clone git+ssh://git@github.com/cern-eos/go-eosgrpc
          cd go-eosgrpc
          git config user.email "cbox@cern.ch"
          git config user.name "cernbox-bot"
          cp ../grpc-proto/build/*.go .
          git add .
          push=1
          git commit -m "Synced to https://github.com/cern-eos/grpc-proto/tree/${{ github.sha }}" || push=0
          if [ $push -eq 1 ]; then
            git push origin main
          else
            echo "The committed changes (if any) did not update the protobufs, nothing more to do"
          fi
          echo "pushbuf=$push" >> $GITHUB_OUTPUT
  publish:
    name: Setup buf to push artifacts
    runs-on: ubuntu-latest
    container: cs3org/cs3apis-build:master
    needs: build
    if: needs.build.outputs.pushbuf == '1'  # skip all this when nothing to do
    steps:
      - name: setup-buf
        uses: bufbuild/buf-setup-action@v1
      - name: push-buf
        uses: bufbuild/buf-push-action@v1
        with:
          buf_token: ${{ secrets.BUF_TOKEN }}
          draft: ${{ github.ref_name != 'master'}}

